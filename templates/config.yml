# This file was generated by Ansible for {{ ansible_fqdn }}
# Do NOT modify this file by hand!

###############
# Mail Server #
###############

mail.backend: "{{sentry_mail_backend}}"
mail.host: '{{sentry_mail_host}}'
mail.port: {{sentry_mail_port}}
mail.username: '{{sentry_mail_username}}'
mail.password: '{{sentry_mail_password}}'
mail.use-tls: {{sentry_mail_use_tls|to_json}}
# The email address to send on behalf of
mail.from: '{{sentry_mail_from}}'

# If you'd like to configure email replies, enable this.
mail.enable-replies: {{sentry_mail_enable_replies|to_json}}

# When email-replies are enabled, this value is used in the Reply-To header
mail.reply-hostname: '{{sentry_mail_reply_hostname}}'

# If you're using mailgun for inbound mail, set your API key and configure a
# route to forward to /api/hooks/mailgun/inbound/
mail.mailgun-api-key: '{{sentry_mail_mailgun_api_key}}'

###################
# System Settings #
###################

# If this file ever becomes compromised, it's important to regenerate your a new key
# Changing this value will result in all current sessions being invalidated.
# A new key can be generated with `$ sentry config generate-secret-key`
system.secret-key: "{{sentry_secret_key}}"
system.url-prefix: "{{ sentry_use_ssl and 'https' or 'http'}}://{{sentry_hostname}}"
{% if sentry_admins %}
system.admin-email: "{{sentry_admins[0].email}}"
{% endif %}

# The ``redis.clusters`` setting is used, unsurprisingly, to configure Redis
# clusters. These clusters can be then referred to by name when configuring
# backends such as the cache, digests, or TSDB backend.
redis.clusters:
    default:
        hosts:
            0:
                host: "{{sentry_redis_host}}"
                port: {{sentry_redis_port}}
                password: "{{sentry_redis_password}}"
                db: {{sentry_redis_db}}

################
# File storage #
################

# Uploaded media uses these `filestore` settings. The available
# backends are either `filesystem` or `s3`.

filestore.backend: '{{sentry_filestore_backend}}'
filestore.options:
{% if sentry_filestore_backend == 'filesystem' %}
    location: '{{sentry_filestore_location}}'
{% else %}
    access_key: '{{sentry_filestore_access_key}}'
    secret_key: '{{sentry_filestore_secret_key}}'
    bucket_name: '{{sentry_filestore_bucket_name}}'
{% endif %}
